{"version":3,"sources":["datetime.mask.js"],"names":["BaseMask","CustomMask","date","DATETIME_MASK_SETTINGS","format","DatetimeMask","getType","getValue","value","settings","mergedSettings","_getMergedSettings","mask","getMask","shared","getRawValue","maskedValue","parse","validate","isValid","mergeSettings","i","length","replace"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AAEA,MAAMC,sBAAsB,GAAG;AAC7BC,EAAAA,MAAM,EAAE;AADqB,CAA/B;AAIA,eAAe,MAAMC,YAAN,SAA2BL,QAA3B,CAAoC;AACjD,SAAOM,OAAP,GAAiB;AACf,WAAO,UAAP;AACD;;AAEDC,EAAAA,QAAQ,CAACC,KAAD,EAAQC,QAAR,EAAkB;AACxB,QAAIC,cAAc,GAAG,KAAKC,kBAAL,CAAwBF,QAAxB,CAArB;;AACA,QAAIG,IAAI,GAAG,KAAKC,OAAL,CAAaL,KAAb,EAAoBE,cAApB,CAAX;AAEA,WAAOT,UAAU,CAACa,MAAX,CAAkBP,QAAlB,CAA2BC,KAA3B,EAAkC;AAAEI,MAAAA;AAAF,KAAlC,CAAP;AACD;;AAEDG,EAAAA,WAAW,CAACC,WAAD,EAAcP,QAAd,EAAwB;AACjC,QAAIC,cAAc,GAAG,KAAKC,kBAAL,CAAwBF,QAAxB,CAArB;;AACA,WAAOP,IAAI,CAACe,KAAL,CAAWD,WAAX,EAAwBN,cAAc,CAACN,MAAvC,CAAP;AACD;;AAEDc,EAAAA,QAAQ,CAACV,KAAD,EAAQC,QAAR,EAAkB;AACxB,QAAIO,WAAW,GAAG,KAAKT,QAAL,CAAcC,KAAd,EAAqBC,QAArB,CAAlB;;AACA,QAAIC,cAAc,GAAG,KAAKC,kBAAL,CAAwBF,QAAxB,CAArB;;AACA,QAAIU,OAAO,GAAGjB,IAAI,CAACiB,OAAL,CAAaH,WAAb,EAA0BN,cAAc,CAACN,MAAzC,CAAd;AACA,WAAOe,OAAP;AACD;;AAEDR,EAAAA,kBAAkB,CAACF,QAAD,EAAW;AAC3B,WAAO,MAAMW,aAAN,CAAoBjB,sBAApB,EAA4CM,QAA5C,CAAP;AACD;;AAEDI,EAAAA,OAAO,CAACL,KAAD,EAAQC,QAAR,EAAkB;AACvB,QAAIG,IAAI,GAAG,EAAX;;AAEA,SAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,QAAQ,CAACL,MAAT,CAAgBkB,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/CT,MAAAA,IAAI,IAAIH,QAAQ,CAACL,MAAT,CAAgBiB,CAAhB,EAAmBE,OAAnB,CAA2B,YAA3B,EAAyC,GAAzC,CAAR;AACD;;AAED,WAAOX,IAAP;AACD;;AApCgD","sourcesContent":["import BaseMask from './_base.mask';\nimport CustomMask from './custom.mask';\nimport date from 'date-and-time';\n\nconst DATETIME_MASK_SETTINGS = {\n  format: 'DD/MM/YYYY HH:mm:ss',\n};\n\nexport default class DatetimeMask extends BaseMask {\n  static getType() {\n    return 'datetime';\n  }\n\n  getValue(value, settings) {\n    let mergedSettings = this._getMergedSettings(settings);\n    let mask = this.getMask(value, mergedSettings);\n\n    return CustomMask.shared.getValue(value, { mask });\n  }\n\n  getRawValue(maskedValue, settings) {\n    let mergedSettings = this._getMergedSettings(settings);\n    return date.parse(maskedValue, mergedSettings.format);\n  }\n\n  validate(value, settings) {\n    let maskedValue = this.getValue(value, settings);\n    let mergedSettings = this._getMergedSettings(settings);\n    let isValid = date.isValid(maskedValue, mergedSettings.format);\n    return isValid;\n  }\n\n  _getMergedSettings(settings) {\n    return super.mergeSettings(DATETIME_MASK_SETTINGS, settings);\n  }\n\n  getMask(value, settings) {\n    let mask = '';\n\n    for (let i = 0; i < settings.format.length; i++) {\n      mask += settings.format[i].replace(/[a-zA-Z]+/g, '9');\n    }\n\n    return mask;\n  }\n}\n"]}